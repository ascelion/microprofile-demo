
buildscript {
	repositories {
		mavenCentral()
		jcenter()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath 'org.galaxx.gradle:jandex:1.0.2'
		classpath 'pl.allegro.tech.build:axion-release-plugin:1.10.+'
	}
}

apply plugin: 'pl.allegro.tech.build.axion-release'

group = 'ascelion.poc'
version = scmVersion.version

allprojects {
	repositories {
		mavenCentral()
		jcenter()
		mavenLocal()
	}

	apply plugin: 'extend-project'
	apply plugin: 'lifecycle-base'
	apply plugin: 'eclipse'

	clean {
		delete 'bin', 'target', '*.log'
	}

	cleanEclipse {
		delete '.settings', '.classpath', '.project'
	}

	defaultTasks 'clean', 'assemble'
}

subprojects {
	group = rootProject.group
	version = rootProject.version

	ext {
		set( 'isRelease', !version.endsWith( '-SNAPSHOT' ) )
		set( 'dockerTag', isRelease ? version : new java.text.SimpleDateFormat("'0.'yyMMdd'.'HH'.'mm").format(new Date()) )
	}

	plugins.withType( JavaPlugin ) {
		project.apply plugin: 'org.galaxx.gradle.jandex'

		sourceCompatibility = '8'
		targetCompatibility = '8'

		project.apply from: rootProject.file('lombok.gradle')

		sourceSets {
			all {
				output.resourcesDir = output.classesDirs[0]
			}
		}

		dependencies {
			implementation platform( 'org.eclipse.microprofile:microprofile:3.1' )
			implementation platform( 'com.fasterxml.jackson:jackson-bom:2.9.10' )
			implementation platform( 'org.apache.deltaspike.distribution:distributions-bom:1.9.1' )
			implementation platform( 'io.smallrye:smallrye-bom:3.0.2' )

			implementation platform( 'org.hibernate.ogm:hibernate-ogm-bom:5.4.1.Final' )

			implementation platform( 'ascelion.flywaydb:flywaydb-ext:1.0.2' )
			implementation platform( 'ascelion.mp-config:mp-config-ext:1.0.0-SNAPSHOT' )

			implementation platform( 'org.jboss.weld:weld-core-bom:3.1.2.Final' )
			implementation platform( 'io.undertow:undertow-parent:2.0.27.Final' )
			implementation platform( 'org.glassfish.jersey:jersey-bom:2.29.1' )

			constraints {
				implementation 'jakarta.enterprise:jakarta.enterprise.cdi-api:2.0.2'
				implementation 'jakarta.annotation:jakarta.annotation-api:1.3.5'
				implementation 'jakarta.validation:jakarta.validation-api:2.0.2'
				implementation 'jakarta.persistence:jakarta.persistence-api:2.2.3'
				implementation 'jakarta.transaction:jakarta.transaction-api:1.3.3'
				implementation 'jakarta.ws.rs:jakarta.ws.rs-api:2.1.6'
				implementation 'jakarta.json.bind:jakarta.json.bind-api:1.0.2'

				implementation 'org.slf4j:slf4j-api:1.7.28'
				implementation 'org.slf4j:slf4j-jdk14:1.7.28'

				implementation 'ch.qos.logback:logback-classic:1.2.3'

				implementation 'org.apache.commons:commons-lang3:3.9'
				implementation 'org.apache.commons:commons-text:1.8'

				implementation 'org.flywaydb:flyway-core:6.0.3'

				implementation 'org.yaml:snakeyaml:1.25'
				implementation 'io.leangen.geantyref:geantyref:1.3.9'

				implementation 'com.zaxxer:HikariCP:3.4.1'
				implementation 'com.h2database:h2:1.4.199'
				implementation 'org.postgresql:postgresql:42.2.8'

//				implementation 'org.jboss.resteasy:resteasy-client-microprofile:4.3.1.Final'
				implementation 'org.apache.cxf:cxf-rt-rs-mp-client:3.3.4'

				implementation 'org.jboss.weld:weld-junit4:2.0.1.Final'
			}

			compileOnly 'jakarta.annotation:jakarta.annotation-api'
			compileOnly 'jakarta.enterprise:jakarta.enterprise.cdi-api'

			compileOnly 'jakarta.persistence:jakarta.persistence-api'
			compileOnly 'jakarta.validation:jakarta.validation-api'

			compileOnly 'jakarta.ws.rs:jakarta.ws.rs-api'

			compileOnly 'org.eclipse.microprofile.config:microprofile-config-api'
			compileOnly 'org.eclipse.microprofile.rest.client:microprofile-rest-client-api'
			compileOnly 'org.eclipse.microprofile.fault-tolerance:microprofile-fault-tolerance-api'

			compileOnly 'ascelion.mp-config:mp-config-ext-api'

			runtimeOnly 'org.postgresql:postgresql'

			implementation 'org.slf4j:slf4j-api'
			runtimeOnly 'ch.qos.logback:logback-classic'

			testImplementation 'junit:junit:4.12'
			testImplementation 'org.hamcrest:hamcrest-core:1.3'
			testImplementation 'org.hamcrest:hamcrest-library:1.3'
			testRuntimeOnly 'com.h2database:h2'
		}

		jar {
			baseName = "${rootProject.name}-${project.name}"
		}
	}
	tasks.withType( AbstractArchiveTask ) {
		// strip version from archive name
		archiveVersion = ''
		duplicatesStrategy = 'exclude'
	}
	plugins.withType( DistributionPlugin ) {
		distributions.all {
			contents.into '/'
		}
	}
	plugins.withType( ApplicationPlugin ) {
		mainClassName = 'ascelion.kalah.boot.Main'

		run {
			args '--config', 'application.profile=dev'
		}

		plugins.withId( 'docker' ) {
			project.apply from: rootProject.file( 'docker.gradle' )
		}
	}

	eclipse.project.name = "${project.group}.${rootProject.name}-${name}"
	eclipse.classpath.downloadSources = true
}

eclipse.project.name = "${project.group}.${name}"

wrapper {
	distributionType = 'all'
}

